// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: pcp.proto

package gopcp_gateway

import (
	context "context"
	fmt "fmt"
	pb "github.com/aloknerurkar/gopcp/core/heartbeat/pb"
	proto "github.com/gogo/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type EmtpyMessage struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmtpyMessage) Reset()         { *m = EmtpyMessage{} }
func (m *EmtpyMessage) String() string { return proto.CompactTextString(m) }
func (*EmtpyMessage) ProtoMessage()    {}
func (*EmtpyMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_fee9e9d23c3c6134, []int{0}
}
func (m *EmtpyMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmtpyMessage.Unmarshal(m, b)
}
func (m *EmtpyMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmtpyMessage.Marshal(b, m, deterministic)
}
func (m *EmtpyMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmtpyMessage.Merge(m, src)
}
func (m *EmtpyMessage) XXX_Size() int {
	return xxx_messageInfo_EmtpyMessage.Size(m)
}
func (m *EmtpyMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_EmtpyMessage.DiscardUnknown(m)
}

var xxx_messageInfo_EmtpyMessage proto.InternalMessageInfo

type NodeList struct {
	Nodes                []*NodeList_Item `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *NodeList) Reset()         { *m = NodeList{} }
func (m *NodeList) String() string { return proto.CompactTextString(m) }
func (*NodeList) ProtoMessage()    {}
func (*NodeList) Descriptor() ([]byte, []int) {
	return fileDescriptor_fee9e9d23c3c6134, []int{1}
}
func (m *NodeList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeList.Unmarshal(m, b)
}
func (m *NodeList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeList.Marshal(b, m, deterministic)
}
func (m *NodeList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeList.Merge(m, src)
}
func (m *NodeList) XXX_Size() int {
	return xxx_messageInfo_NodeList.Size(m)
}
func (m *NodeList) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeList.DiscardUnknown(m)
}

var xxx_messageInfo_NodeList proto.InternalMessageInfo

func (m *NodeList) GetNodes() []*NodeList_Item {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type NodeList_Item struct {
	Info                 *pb.NodeInfo      `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	Svcs                 []*pb.ServiceInfo `protobuf:"bytes,2,rep,name=svcs,proto3" json:"svcs,omitempty"`
	LastHeartbeat        int64             `protobuf:"varint,3,opt,name=last_heartbeat,json=lastHeartbeat,proto3" json:"last_heartbeat,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *NodeList_Item) Reset()         { *m = NodeList_Item{} }
func (m *NodeList_Item) String() string { return proto.CompactTextString(m) }
func (*NodeList_Item) ProtoMessage()    {}
func (*NodeList_Item) Descriptor() ([]byte, []int) {
	return fileDescriptor_fee9e9d23c3c6134, []int{1, 0}
}
func (m *NodeList_Item) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeList_Item.Unmarshal(m, b)
}
func (m *NodeList_Item) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeList_Item.Marshal(b, m, deterministic)
}
func (m *NodeList_Item) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeList_Item.Merge(m, src)
}
func (m *NodeList_Item) XXX_Size() int {
	return xxx_messageInfo_NodeList_Item.Size(m)
}
func (m *NodeList_Item) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeList_Item.DiscardUnknown(m)
}

var xxx_messageInfo_NodeList_Item proto.InternalMessageInfo

func (m *NodeList_Item) GetInfo() *pb.NodeInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *NodeList_Item) GetSvcs() []*pb.ServiceInfo {
	if m != nil {
		return m.Svcs
	}
	return nil
}

func (m *NodeList_Item) GetLastHeartbeat() int64 {
	if m != nil {
		return m.LastHeartbeat
	}
	return 0
}

func init() {
	proto.RegisterType((*EmtpyMessage)(nil), "gopcp.gateway.EmtpyMessage")
	proto.RegisterType((*NodeList)(nil), "gopcp.gateway.NodeList")
	proto.RegisterType((*NodeList_Item)(nil), "gopcp.gateway.NodeList.Item")
}

func init() { proto.RegisterFile("pcp.proto", fileDescriptor_fee9e9d23c3c6134) }

var fileDescriptor_fee9e9d23c3c6134 = []byte{
	// 290 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0xd1, 0x4a, 0xc3, 0x30,
	0x14, 0x86, 0xc9, 0xda, 0x8a, 0x4b, 0xdd, 0xc0, 0xdc, 0x58, 0xea, 0x84, 0x5a, 0x10, 0x7a, 0xd5,
	0xb0, 0xea, 0x2b, 0x88, 0x0e, 0x54, 0x46, 0xbd, 0xf2, 0x4a, 0xd2, 0x2c, 0xab, 0x85, 0x2e, 0x27,
	0x34, 0xa1, 0xb2, 0x5b, 0x5f, 0x41, 0xf0, 0xc5, 0xbc, 0xf0, 0x05, 0x7c, 0x10, 0x49, 0xeb, 0x9c,
	0x8a, 0x5e, 0xfe, 0x87, 0xef, 0xe4, 0x3b, 0x7f, 0xf0, 0x50, 0x71, 0x95, 0xaa, 0x06, 0x0c, 0x90,
	0x51, 0x09, 0x36, 0x94, 0xcc, 0x88, 0x47, 0xb6, 0x0e, 0x27, 0x25, 0x40, 0x59, 0x0b, 0xca, 0x54,
	0x45, 0x99, 0x94, 0x60, 0x98, 0xa9, 0x40, 0xea, 0x1e, 0x0e, 0x8f, 0x39, 0x34, 0x82, 0x3e, 0x08,
	0xd6, 0x98, 0x42, 0x30, 0x43, 0x55, 0xb1, 0x0d, 0x3d, 0x12, 0x8f, 0xf1, 0xde, 0xf9, 0xca, 0xa8,
	0xf5, 0xb5, 0xd0, 0x9a, 0x95, 0x22, 0x7e, 0x43, 0x78, 0xf7, 0x06, 0x16, 0xe2, 0xaa, 0xd2, 0x86,
	0x64, 0xd8, 0x93, 0xb0, 0x10, 0x3a, 0x40, 0x91, 0x93, 0xf8, 0xd9, 0x24, 0xfd, 0x21, 0x4f, 0x37,
	0x5c, 0x3a, 0x33, 0x62, 0x95, 0xf7, 0x68, 0xf8, 0x82, 0xb0, 0x6b, 0x33, 0x99, 0x62, 0xb7, 0x92,
	0x4b, 0x08, 0x50, 0x84, 0x12, 0x3f, 0x3b, 0xea, 0x7d, 0x1c, 0x6a, 0x9d, 0x6e, 0x6f, 0xb0, 0x2f,
	0xcc, 0xe4, 0x12, 0xf2, 0x0e, 0x25, 0x67, 0xd8, 0xd5, 0x2d, 0xd7, 0xc1, 0xa0, 0xd3, 0x45, 0x7f,
	0xae, 0xdc, 0x8a, 0xa6, 0xad, 0xf8, 0xe7, 0x96, 0xa5, 0xc9, 0x09, 0x1e, 0xd7, 0x4c, 0x9b, 0xfb,
	0x2f, 0x26, 0x70, 0x22, 0x94, 0x38, 0xf9, 0xc8, 0x4e, 0x2f, 0x37, 0xc3, 0xec, 0x0e, 0x7b, 0x17,
	0x30, 0xe7, 0x8a, 0xcc, 0xb1, 0x67, 0xbd, 0x9a, 0x1c, 0xfe, 0xea, 0xf3, 0xfd, 0x23, 0xc2, 0x83,
	0x7f, 0xca, 0xc6, 0xfb, 0x4f, 0xaf, 0xef, 0xcf, 0x03, 0x9f, 0x0c, 0x69, 0x3b, 0xa5, 0x5d, 0xe7,
	0x62, 0xa7, 0x3b, 0xf4, 0xf4, 0x23, 0x00, 0x00, 0xff, 0xff, 0x24, 0x86, 0x4b, 0xa2, 0xa8, 0x01,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GoPcpClient is the client API for GoPcp service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GoPcpClient interface {
	// Return Nodes in the system
	Nodes(ctx context.Context, in *EmtpyMessage, opts ...grpc.CallOption) (*NodeList, error)
}

type goPcpClient struct {
	cc *grpc.ClientConn
}

func NewGoPcpClient(cc *grpc.ClientConn) GoPcpClient {
	return &goPcpClient{cc}
}

func (c *goPcpClient) Nodes(ctx context.Context, in *EmtpyMessage, opts ...grpc.CallOption) (*NodeList, error) {
	out := new(NodeList)
	err := c.cc.Invoke(ctx, "/gopcp.gateway.GoPcp/Nodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GoPcpServer is the server API for GoPcp service.
type GoPcpServer interface {
	// Return Nodes in the system
	Nodes(context.Context, *EmtpyMessage) (*NodeList, error)
}

func RegisterGoPcpServer(s *grpc.Server, srv GoPcpServer) {
	s.RegisterService(&_GoPcp_serviceDesc, srv)
}

func _GoPcp_Nodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmtpyMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoPcpServer).Nodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gopcp.gateway.GoPcp/Nodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoPcpServer).Nodes(ctx, req.(*EmtpyMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _GoPcp_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gopcp.gateway.GoPcp",
	HandlerType: (*GoPcpServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Nodes",
			Handler:    _GoPcp_Nodes_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pcp.proto",
}
